// Block definition (there may be more than one block per file)
FUNCTION_BLOCK truck

// Define input variables
VAR_INPUT
    x : REAL;
    y : REAL;
    angle : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    turn : REAL;
END_VAR

FUZZIFY x
    TERM esquerda := (0, 1) (0.5, 0); 
    TERM direita := (0.5, 0) (1, 1); 
END_FUZZIFY

FUZZIFY y
    TERM cima := (0, 1) (0.5, 0);
    TERM baixo := (0.5, 0) (1, 1);
END_FUZZIFY

FUZZIFY angle
    TERM west := (0, 1) (90, 0) (270, 0)(360, 1);
    TERM south := (0, 0) (90, 1) (180, 0);
    TERM east := (90, 0) (180, 1) (270, 0);
    TERM north := (180, 0)(270, 1) (360, 0);
END_FUZZIFY

DEFUZZIFY turn
    TERM direita := (-1,1) (0,0);
    TERM reto := (0,1);
    TERM esquerda := (0,0) (1,1);
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;

    RULE 1 : IF x IS esquerda AND angle IS south
                THEN turn IS esquerda;
    
    RULE 2 : IF x IS esquerda AND angle IS north
                THEN turn IS direita;

    RULE 3 : IF x IS direita AND angle IS north
                THEN turn IS esquerda;

    RULE 4 : IF x IS direita AND angle IS south
                THEN turn IS direita;

    RULE 5 : IF y IS cima AND angle IS west
                THEN turn IS esquerda;

    RULE 6 : IF y IS cima AND angle IS east
                THEN turn IS direita;

    RULE 6 : IF y IS baixo AND angle IS east
                THEN turn IS direita;

    RULE 6 : IF y IS baixo AND angle IS west
                THEN turn IS esquerda;
END_RULEBLOCK

END_FUNCTION_BLOCK