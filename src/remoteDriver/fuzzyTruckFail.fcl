// Block definition (there may be more than one block per file)
FUNCTION_BLOCK truck

// Define input variables
VAR_INPUT
    x : REAL;
    y : REAL;
    angle : REAL;
END_VAR

// Define output variable
VAR_OUTPUT
    turn : REAL;
END_VAR

FUZZIFY x
    TERM esquerda := (-0.5,1) (0, 1) (0.5, 0);
    TERM centro := (0.45, 0) (0.45, 1)  (0.55, 1) (0.55, 0);
   TERM direita := (0.5, 0) (1, 1) (1.5, 1); 
END_FUZZIFY

FUZZIFY y
    TERM cima := (-0.5, 1) (0, 1) (0.75, 0);
    TERM baixo := (0.75, 0) (1, 1) (1.5, 1);
END_FUZZIFY

FUZZIFY angle
    TERM west := (0, 1) (90, 0) (270, 0)(360, 1);
    TERM south := (0, 0) (90, 1) (180, 0);
    TERM east := (90, 0) (180, 1) (270, 0);
    TERM north := (180, 0)(270, 1) (360, 0);
END_FUZZIFY

DEFUZZIFY turn
    TERM direita := (-1,1) (0,0);
    TERM reto := (0,1);
    TERM esquerda := (0,0) (1,1);
    // Use 'Center Of Gravity' defuzzification method
    METHOD : COG;
    // Default value is 0 (if no rule activates defuzzifier)
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK No1
    // Use 'min' for 'and' (also implicit use 'max'
    // for 'or' to fulfill DeMorgan's Law)
    AND : MIN;
    // Use 'min' activation method
    ACT : MIN;
    // Use 'max' accumulation method
    ACCU : MAX;
    //centro
    RULE centro : IF x IS centro AND y IS baixo AND angle IS south
    					THEN turn IS reto;
	//cima esquerda
    RULE cimaEsquerdaSouth : IF x IS esquerda AND y IS cima AND angle IS south
                						THEN turn IS esquerda;
    RULE cimaEsquerdaEast : IF x IS esquerda AND y IS cima AND angle IS east
                						THEN turn IS direita;
    RULE cimaEsquerdaNorth : IF x IS esquerda AND y IS cima AND angle IS north
                						THEN turn IS direita;
    RULE cimaEsquerdaWest : IF x IS esquerda AND y IS cima AND angle IS west
                						THEN turn IS direita;
    //cima direita 
    RULE cimaDireitaSouth : IF x IS direita AND y IS cima AND angle IS south
                						THEN turn IS direita;
    RULE cimaDireitaEast : IF x IS direita AND y IS cima AND angle IS east
                						THEN turn IS esquerda;
    RULE cimaDireitaNorth : IF x IS direita AND y IS cima AND angle IS north
                						THEN turn IS esquerda;
    RULE cimaDireitaWest : IF x IS direita AND y IS cima AND angle IS west
                						THEN turn IS esquerda;
    //baixo esquerda
    RULE baixoEsquerdaSouth : IF x IS esquerda AND y IS baixo AND angle IS south
                						THEN turn IS esquerda;
    RULE baixoEsquerdaEast : IF x IS esquerda AND y IS baixo AND angle IS east
                						THEN turn IS esquerda;
    RULE baixoEsquerdaNorth : IF x IS esquerda AND y IS baixo AND angle IS north
                						THEN turn IS reto;
    RULE baixoEsquerdaWest : IF x IS esquerda AND y IS baixo AND angle IS west
                						THEN turn IS direita;
    //baixo direita            						
    RULE baixoDireitaSouth : IF x IS direita AND y IS baixo AND angle IS south
                						THEN turn IS direita;
    RULE baixoDireitaEast : IF x IS direita AND y IS baixo AND angle IS east
                						THEN turn IS esquerda;
    RULE baixoDireitaNorth : IF x IS direita AND y IS baixo AND angle IS north
                						THEN turn IS reto;
    RULE baixoDireitaWest : IF x IS direita AND y IS baixo AND angle IS west
                						THEN turn IS direita;
END_RULEBLOCK

END_FUNCTION_BLOCK